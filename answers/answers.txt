Part 2
What are all the types of pokemon that a pokemon can have?
SELECT name FROM types;

What is the name of the pokemon with id 45?
Select name from pokemons where id = 45;

How many pokemon are there?
Select count(*) from pokemons;

How many types are there?
Select count(*) from types;

How many pokemon have a secondary type?
Select count(*) from pokemons where secondary_type;

Part 3
What is each pokemon's primary type?
Select pokemons.name, types.name from pokemons join types on pokemons.primary_type = types.id;

What is Rufflet's secondary type?
Select p.name, t.name from pokemons as p join types as t on p.secondary_type = t.id where p.name = 'Rufflet';

What are the names of the pokemon that belong to the trainer with trainerID 303?
Select p.name from pokemons as p left join pokemon_trainer as pt on p.id = pt.pokemon_id where trainerID = 303;

How many pokemon have a secondary type Poison
Select Count(*) from pokemons join types on secondary_type = types.id where types.name = 'poison';

What are all the primary types and how many pokemon have that type?
SELECT types.name, COUNT(pokemons.primary_type) FROM pokemons INNER JOIN types ON primary_type = types.id GROUP BY types.id;

How many pokemon at level 100 does each trainer with at least one level 100 pokemone have? (Hint: your query should not display a trainer)
Select trainerID, count(*) from pokemon_trainer where pokelevel = 100 group by trainerID;

How many pokemon only belong to one trainer and no other?
SELECT COUNT(*) FROM (SELECT p.name, COUNT(p.name) FROM pokemons AS p INNER JOIN pokemon_trainer pt ON p.id = pt.pokemon_id GROUP BY pt.pokemon_id HAVING COUNT(pt.pokemon_id)=1) AS subq;

Part 4
SELECT p.name AS 'Pokemon Name', t.trainername AS 'Trainer Name', pt.pokelevel AS 'Level', types.name AS 'Primary Type', secTypes.name AS 'Secondary Type'
FROM pokemons AS p
         INNER JOIN types ON p.primary_type = types.id
         INNER JOIN types AS secTypes ON p.secondary_type = secTypes.id
         INNER JOIN pokemon_trainer AS pt ON p.id = pt.pokemon_ID
         INNER JOIN trainers AS t ON t.trainerID=pt.trainerID
         INNER JOIN
     (SELECT trainerID, avg(pokelevel), count(pokelevel) * round(avg(pokelevel) * (avg(maxhp) + avg(attack) + avg(defense) + avg(spatk) + avg(spdef) + avg(speed))) AS score
      FROM pokemon_trainer
      GROUP BY trainerID
      ORDER BY score DESC) AS score ON score.trainerID = t.trainerID
GROUP BY pt.trainerID,pt.pokemon_id,pt.pokelevel
ORDER BY score.score DESC;
